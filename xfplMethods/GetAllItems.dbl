;;*****************************************************************************
;;
;; File:        GetAllItems.dbl
;;
;; Description: Returns a collection of ITEM records
;;
;; Type:        Synergy/DE xfServerPlus Method
;;
;; Author:      Steve Ives
;;
;; Company:     Synergex Professional Services Group
;;
;;*****************************************************************************
;;
;; WARNING:     This code was generated by CodeGen. Any changes that you make
;;              to this file will be lost if the code is regenerated.
;;
;;*****************************************************************************
;;
import Synergex.SynergyDE.Select
import System.Collections

.ifndef strItem
.include "ITEMS" repository, structure="strItem", end
.endc

{xfMethod(interface="MyApi",elb="EXE:xfplMethods")}
function GetAllItems, boolean

    {xfParameter(name="Items",collectionType=xfCollectType.structure,structure="strItem",dataTable=true)}
    required out aItems, @ArrayList

    endparams

    stack record local_data
        chItem ,int
        retVal      ,boolean
        tmpbuf      ,strItem
        oSelect     ,@Select
        oFrom       ,@From
        oWhere      ,@Where
        segCount    ,int
    endrecord

proc

    init local_data
    retVal=true

    aItems = new ArrayList()

    try
    begin
        ;;Open the data file and define the from clause
        open(chItem=syn_freechn(),i:i,"DAT:items.ism")
        oFrom = new From(chItem,tmpbuf)

        ;;If there are multiple segments in the primary key create a where clause

        ;;Get the matching data
        if (oWhere!=^null) then
            oSelect = new Select(oFrom,oWhere)
        else
            oSelect = new Select(oFrom)

        ;;Return the results to the client
        foreach tmpbuf in oSelect
            aItems.Add((@strItem)tmpbuf)

    end
    catch (ex)
        retval=false
    finally
    begin
        ;;Close the data file
        if (chItem&&chopen(chItem))
            close chItem
    end
    endtry

    freturn retVal

endfunction

