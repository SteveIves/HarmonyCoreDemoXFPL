;;*****************************************************************************
;;
;; Title:       MyApiMethodDispachers.dbl
;;
;; Description: Dispatcher classes for exposed methods
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Json
import Harmony.TraditionalBridge
import System.Collections
import TraditionalBridge.Models

.ifdef DBLV11
import System.Text.Json
.define JSON_ELEMENT @JsonElement
.else
.define JSON_ELEMENT @JsonValue
.endc

namespace TraditionalBridge.Dispatchers.MyApi


    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.AddCustomer
    ;;; </summary>
    public class AddCustomer_Dispatcher extends RoutineStub

        private mCustomerMetadata, @DataObjectMetadataBase

        public method AddCustomer_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Customer structure @Customer)
                arg1DataObject,     @DataObjectBase
                arg1,               strCustomer
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Customer structure @Customer)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mCustomerMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %AddCustomer(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.AddItem
    ;;; </summary>
    public class AddItem_Dispatcher extends RoutineStub

        private mItemMetadata, @DataObjectMetadataBase

        public method AddItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Item structure @Item)
                arg1DataObject,     @DataObjectBase
                arg1,               strItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Item structure @Item)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %AddItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.AddOrder
    ;;; </summary>
    public class AddOrder_Dispatcher extends RoutineStub

        private mOrderMetadata, @DataObjectMetadataBase

        public method AddOrder_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Order structure @Order)
                arg1DataObject,     @DataObjectBase
                arg1,               strOrder
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Order structure @Order)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mOrderMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %AddOrder(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.AddOrderItem
    ;;; </summary>
    public class AddOrderItem_Dispatcher extends RoutineStub

        private mOrderItemMetadata, @DataObjectMetadataBase

        public method AddOrderItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderItem structure @OrderItem)
                arg1DataObject,     @DataObjectBase
                arg1,               strOrderItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderItem structure @OrderItem)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mOrderItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %AddOrderItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.AddVendor
    ;;; </summary>
    public class AddVendor_Dispatcher extends RoutineStub

        private mVendorMetadata, @DataObjectMetadataBase

        public method AddVendor_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Vendor structure @Vendor)
                arg1DataObject,     @DataObjectBase
                arg1,               strVendor
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Vendor structure @Vendor)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mVendorMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %AddVendor(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.CanDeleteCustomer
    ;;; </summary>
    public class CanDeleteCustomer_Dispatcher extends RoutineStub


        public method CanDeleteCustomer_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN CustomerNumber D6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN CustomerNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %CanDeleteCustomer(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.CanDeleteItem
    ;;; </summary>
    public class CanDeleteItem_Dispatcher extends RoutineStub


        public method CanDeleteItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN ItemNumber D6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN ItemNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %CanDeleteItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.CanDeleteOrder
    ;;; </summary>
    public class CanDeleteOrder_Dispatcher extends RoutineStub


        public method CanDeleteOrder_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber D6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %CanDeleteOrder(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.CanDeleteOrderItem
    ;;; </summary>
    public class CanDeleteOrderItem_Dispatcher extends RoutineStub


        public method CanDeleteOrderItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber D6)
                arg1,               d6
                ;;Argument 2 (REQUIRED IN ItemNumber D2)
                arg2,               d2
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED IN ItemNumber D2)
            arg2 = dispatcher.GetDecimal(arguments[2])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %CanDeleteOrderItem(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.CanDeleteVendor
    ;;; </summary>
    public class CanDeleteVendor_Dispatcher extends RoutineStub


        public method CanDeleteVendor_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN VendorNumber D6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN VendorNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %CanDeleteVendor(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.DeleteCustomer
    ;;; </summary>
    public class DeleteCustomer_Dispatcher extends RoutineStub


        public method DeleteCustomer_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN CustomerNumber D6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN CustomerNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %DeleteCustomer(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.DeleteItem
    ;;; </summary>
    public class DeleteItem_Dispatcher extends RoutineStub


        public method DeleteItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN ItemNumber D6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN ItemNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %DeleteItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.DeleteOrder
    ;;; </summary>
    public class DeleteOrder_Dispatcher extends RoutineStub


        public method DeleteOrder_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber D6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %DeleteOrder(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.DeleteOrderItem
    ;;; </summary>
    public class DeleteOrderItem_Dispatcher extends RoutineStub


        public method DeleteOrderItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber D6)
                arg1,               d6
                ;;Argument 2 (REQUIRED IN ItemNumber D2)
                arg2,               d2
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED IN ItemNumber D2)
            arg2 = dispatcher.GetDecimal(arguments[2])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %DeleteOrderItem(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.DeleteVendor
    ;;; </summary>
    public class DeleteVendor_Dispatcher extends RoutineStub


        public method DeleteVendor_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN VendorNumber D6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN VendorNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %DeleteVendor(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetAllCustomers
    ;;; </summary>
    public class GetAllCustomers_Dispatcher extends RoutineStub

        private mCustomerMetadata, @DataObjectMetadataBase

        public method GetAllCustomers_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Customers ArrayList collection of structure @Customer returned as DataTable)
                arg1,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            ;;There are no inbound arguments to process

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetAllCustomers(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Customers ArrayList collection of structure @Customer returned as DataTable)
            
            serializer.ArgumentData(1, arg1, FieldDataType.DataObjectCollectionField, 161, "CUSTOMERS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetAllItems
    ;;; </summary>
    public class GetAllItems_Dispatcher extends RoutineStub

        private mItemMetadata, @DataObjectMetadataBase

        public method GetAllItems_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Items ArrayList collection of structure @Item returned as DataTable)
                arg1,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            ;;There are no inbound arguments to process

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetAllItems(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Items ArrayList collection of structure @Item returned as DataTable)
            
            serializer.ArgumentData(1, arg1, FieldDataType.DataObjectCollectionField, 151, "ITEMS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetAllOrderItems
    ;;; </summary>
    public class GetAllOrderItems_Dispatcher extends RoutineStub

        private mOrderItemMetadata, @DataObjectMetadataBase

        public method GetAllOrderItems_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber D6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT OrderItems ArrayList collection of structure @OrderItem returned as DataTable)
                arg2,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetAllOrderItems(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT OrderItems ArrayList collection of structure @OrderItem returned as DataTable)
            
            serializer.ArgumentData(2, arg2, FieldDataType.DataObjectCollectionField, 100, "ORDER_ITEMS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetAllOrders
    ;;; </summary>
    public class GetAllOrders_Dispatcher extends RoutineStub

        private mOrderMetadata, @DataObjectMetadataBase

        public method GetAllOrders_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Orders ArrayList collection of structure @Order returned as DataTable)
                arg1,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            ;;There are no inbound arguments to process

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetAllOrders(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Orders ArrayList collection of structure @Order returned as DataTable)
            
            serializer.ArgumentData(1, arg1, FieldDataType.DataObjectCollectionField, 100, "ORDERS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetAllVendors
    ;;; </summary>
    public class GetAllVendors_Dispatcher extends RoutineStub

        private mVendorMetadata, @DataObjectMetadataBase

        public method GetAllVendors_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Vendors ArrayList collection of structure @Vendor returned as DataTable)
                arg1,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            ;;There are no inbound arguments to process

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetAllVendors(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Vendors ArrayList collection of structure @Vendor returned as DataTable)
            
            serializer.ArgumentData(1, arg1, FieldDataType.DataObjectCollectionField, 135, "VENDORS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetCustomer
    ;;; </summary>
    public class GetCustomer_Dispatcher extends RoutineStub

        private mCustomerMetadata, @DataObjectMetadataBase

        public method GetCustomer_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN CustomerNumber D6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT Customer structure @Customer)
                arg2DataObject,     @DataObjectBase
                arg2,               strCustomer
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN CustomerNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetCustomer(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT Customer structure @Customer)
            
            ;;Argument 2: Single Customer record
            serializer.ArgumentData(2, arg2, FieldDataType.DataObjectField, 161, "CUSTOMERS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetItem
    ;;; </summary>
    public class GetItem_Dispatcher extends RoutineStub

        private mItemMetadata, @DataObjectMetadataBase

        public method GetItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN ItemNumber D6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT Item structure @Item)
                arg2DataObject,     @DataObjectBase
                arg2,               strItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN ItemNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetItem(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT Item structure @Item)
            
            ;;Argument 2: Single Item record
            serializer.ArgumentData(2, arg2, FieldDataType.DataObjectField, 151, "ITEMS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetOrder
    ;;; </summary>
    public class GetOrder_Dispatcher extends RoutineStub

        private mOrderMetadata, @DataObjectMetadataBase

        public method GetOrder_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber D6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT Order structure @Order)
                arg2DataObject,     @DataObjectBase
                arg2,               strOrder
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetOrder(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT Order structure @Order)
            
            ;;Argument 2: Single Order record
            serializer.ArgumentData(2, arg2, FieldDataType.DataObjectField, 100, "ORDERS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetOrderItem
    ;;; </summary>
    public class GetOrderItem_Dispatcher extends RoutineStub

        private mOrderItemMetadata, @DataObjectMetadataBase

        public method GetOrderItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber D6)
                arg1,               d6
                ;;Argument 2 (REQUIRED IN ItemNumber D2)
                arg2,               d2
                ;;Argument 3 (REQUIRED OUT OrderItem structure @OrderItem)
                arg3DataObject,     @DataObjectBase
                arg3,               strOrderItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED IN ItemNumber D2)
            arg2 = dispatcher.GetDecimal(arguments[2])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetOrderItem(arg1,arg2,arg3)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED OUT OrderItem structure @OrderItem)
            
            ;;Argument 3: Single OrderItem record
            serializer.ArgumentData(3, arg3, FieldDataType.DataObjectField, 100, "ORDER_ITEMS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetVendor
    ;;; </summary>
    public class GetVendor_Dispatcher extends RoutineStub

        private mVendorMetadata, @DataObjectMetadataBase

        public method GetVendor_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN VendorNumber D6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT Vendor structure @Vendor)
                arg2DataObject,     @DataObjectBase
                arg2,               strVendor
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN VendorNumber D6)
            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetVendor(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT Vendor structure @Vendor)
            
            ;;Argument 2: Single Vendor record
            serializer.ArgumentData(2, arg2, FieldDataType.DataObjectField, 135, "VENDORS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.UpdateCustomer
    ;;; </summary>
    public class UpdateCustomer_Dispatcher extends RoutineStub

        private mCustomerMetadata, @DataObjectMetadataBase

        public method UpdateCustomer_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Customer structure @Customer)
                arg1DataObject,     @DataObjectBase
                arg1,               strCustomer
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Customer structure @Customer)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mCustomerMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %UpdateCustomer(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.UpdateItem
    ;;; </summary>
    public class UpdateItem_Dispatcher extends RoutineStub

        private mItemMetadata, @DataObjectMetadataBase

        public method UpdateItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Item structure @Item)
                arg1DataObject,     @DataObjectBase
                arg1,               strItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Item structure @Item)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %UpdateItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.UpdateOrder
    ;;; </summary>
    public class UpdateOrder_Dispatcher extends RoutineStub

        private mOrderMetadata, @DataObjectMetadataBase

        public method UpdateOrder_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Order structure @Order)
                arg1DataObject,     @DataObjectBase
                arg1,               strOrder
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Order structure @Order)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mOrderMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %UpdateOrder(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.UpdateOrderItem
    ;;; </summary>
    public class UpdateOrderItem_Dispatcher extends RoutineStub

        private mOrderItemMetadata, @DataObjectMetadataBase

        public method UpdateOrderItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderItem structure @OrderItem)
                arg1DataObject,     @DataObjectBase
                arg1,               strOrderItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderItem structure @OrderItem)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mOrderItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %UpdateOrderItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.UpdateVendor
    ;;; </summary>
    public class UpdateVendor_Dispatcher extends RoutineStub

        private mVendorMetadata, @DataObjectMetadataBase

        public method UpdateVendor_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Vendor structure @Vendor)
                arg1DataObject,     @DataObjectBase
                arg1,               strVendor
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Vendor structure @Vendor)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mVendorMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %UpdateVendor(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ValidateCustomer
    ;;; </summary>
    public class ValidateCustomer_Dispatcher extends RoutineStub

        private mCustomerMetadata, @DataObjectMetadataBase

        public method ValidateCustomer_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT Customer structure @Customer)
                arg1DataObject,     @DataObjectBase
                arg1,               strCustomer
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT Customer structure @Customer)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mCustomerMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ValidateCustomer(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT Customer structure @Customer)
            
            ;;Argument 1: Single Customer record
            serializer.ArgumentData(1, arg1, FieldDataType.DataObjectField, 161, "CUSTOMERS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ValidateItem
    ;;; </summary>
    public class ValidateItem_Dispatcher extends RoutineStub

        private mItemMetadata, @DataObjectMetadataBase

        public method ValidateItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT Item structure @Item)
                arg1DataObject,     @DataObjectBase
                arg1,               strItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT Item structure @Item)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ValidateItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT Item structure @Item)
            
            ;;Argument 1: Single Item record
            serializer.ArgumentData(1, arg1, FieldDataType.DataObjectField, 151, "ITEMS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ValidateOrder
    ;;; </summary>
    public class ValidateOrder_Dispatcher extends RoutineStub

        private mOrderMetadata, @DataObjectMetadataBase

        public method ValidateOrder_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT Order structure @Order)
                arg1DataObject,     @DataObjectBase
                arg1,               strOrder
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT Order structure @Order)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mOrderMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ValidateOrder(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT Order structure @Order)
            
            ;;Argument 1: Single Order record
            serializer.ArgumentData(1, arg1, FieldDataType.DataObjectField, 100, "ORDERS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ValidateOrderItem
    ;;; </summary>
    public class ValidateOrderItem_Dispatcher extends RoutineStub

        private mOrderItemMetadata, @DataObjectMetadataBase

        public method ValidateOrderItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT OrderItem structure @OrderItem)
                arg1DataObject,     @DataObjectBase
                arg1,               strOrderItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT OrderItem structure @OrderItem)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mOrderItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ValidateOrderItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT OrderItem structure @OrderItem)
            
            ;;Argument 1: Single OrderItem record
            serializer.ArgumentData(1, arg1, FieldDataType.DataObjectField, 100, "ORDER_ITEMS", false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ValidateVendor
    ;;; </summary>
    public class ValidateVendor_Dispatcher extends RoutineStub

        private mVendorMetadata, @DataObjectMetadataBase

        public method ValidateVendor_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT Vendor structure @Vendor)
                arg1DataObject,     @DataObjectBase
                arg1,               strVendor
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT Vendor structure @Vendor)
            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mVendorMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ValidateVendor(arg1)

            ;;Function return value
            serializer.ArgumentData(0, returnValue)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT Vendor structure @Vendor)
            
            ;;Argument 1: Single Vendor record
            serializer.ArgumentData(1, arg1, FieldDataType.DataObjectField, 135, "VENDORS", false)
        endmethod

    endclass

endnamespace